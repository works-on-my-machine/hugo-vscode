{
    "name": "Hugo Extended",
    "build": {
        "dockerfile": "Dockerfile",
        "args": {
            // Update VARIANT to pick hugo variant.
            // Example variants: hugo, hugo_extended
            // Rebuild the container if it already exists to update.
            "VARIANT": "hugo_extended",
            // Update VERSION to pick a specific hugo version.
            // Example versions: latest, 0.73.0, 0,71.1
            // Rebuild the container if it already exists to update.
            "VERSION": "latest",
            // Update NODE_VERSION to pick the Node.js version: 12, 14
            "NODE_VERSION": "14",
        }
    },
    // Set *default* container specific settings.json values on container create.
    "settings": {
        "debug.console.fontFamily": "'SF Mono', Monaco, Menlo, Consolas, 'Courier New', monospace",
        "debug.console.fontSize": 12,
        "diffEditor.ignoreTrimWhitespace": false,
        "diffEditor.renderSideBySide": false,
        "editor.cursorSmoothCaretAnimation": true,
        "editor.cursorStyle": "block",
        "editor.fontFamily": "'SF Mono', Monaco, Menlo, Consolas, 'Courier New', monospace",
        "editor.fontLigatures": false,
        "editor.fontSize": 12,
        "editor.fontWeight": "normal",
        "editor.formatOnPaste": true,
        "editor.formatOnSave": true,
        "editor.insertSpaces": false,
        "editor.minimap.enabled": false,
        "editor.renderWhitespace": "all",
        "editor.rulers": [
            120
        ],
        "editor.suggestSelection": "first",
        "editor.wordWrap": "on",
        "files.autoSave": "afterDelay",
        "files.eol": "\n",
        "git.autofetch": true,
        "git.decorations.enabled": true,
        "markdown.preview.fontSize": 12,
        "problems.decorations.enabled": true,
        "telemetry.enableCrashReporter": false,
        "telemetry.enableTelemetry": false,
        "terminal.integrated.cursorBlinking": true,
        "terminal.integrated.cursorStyle": "underline",
        "terminal.integrated.fontSize": 12,
        "terminal.integrated.fontWeight": "normal",
        "terminal.integrated.shell.linux": "/bin/zsh",
        "todo-tree.general.tags": [
            "BUG",
            "HACK",
            "FIXME",
            "TODO",
            "XXX",
            "[ ]",
            "[x]"
        ],
        "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
        "todo-tree.tree.showScanModeButton": false,
        "workbench.colorTheme": "GitHub Light",
        "workbench.editor.showIcons": false,
        "workbench.iconTheme": "vscode-icontheme-nomo-dark-macos",
        "workbench.sideBar.location": "left",
        "workbench.startupEditor": "newUntitledFile"
    },
    // Add the IDs of extensions you want installed when the container is created.
    "extensions": [
        "bungcip.better-toml",
        "davidanson.vscode-markdownlint",
        "eamodio.gitlens",
        "editorconfig.editorconfig",
        "gaulomatic.vscode-icontheme-nomo-dark-macos",
        "github.github-vscode-theme",
        "budparr.language-hugo-vscode",
        "gruntfuggly.todo-tree",
        "natqe.reload",
    ],
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    "forwardPorts": [
        1313
    ],
    // Use 'postCreateCommand' to run commands after the container is created.
    // "postCreateCommand": "uname -a",
    // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
    "remoteUser": "node"
}
